// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package nqwire is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	Request
	Response
*/
package nqwire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Request struct {
	Dsn      string `protobuf:"bytes,1,opt,name=dsn" json:"dsn,omitempty"`
	Host     string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Database string `protobuf:"bytes,4,opt,name=database" json:"database,omitempty"`
	User     string `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Password string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Response struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Request)(nil), "server.nqwire.Request")
	proto.RegisterType((*Response)(nil), "server.nqwire.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Neo5G service

type Neo5GClient interface {
	Connect(ctx context.Context, opts ...grpc.CallOption) (Neo5G_ConnectClient, error)
}

type neo5GClient struct {
	cc *grpc.ClientConn
}

func NewNeo5GClient(cc *grpc.ClientConn) Neo5GClient {
	return &neo5GClient{cc}
}

func (c *neo5GClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Neo5G_ConnectClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Neo5G_serviceDesc.Streams[0], c.cc, "/server.nqwire.neo5g/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &neo5GConnectClient{stream}
	return x, nil
}

type Neo5G_ConnectClient interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ClientStream
}

type neo5GConnectClient struct {
	grpc.ClientStream
}

func (x *neo5GConnectClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *neo5GConnectClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Neo5G service

type Neo5GServer interface {
	Connect(Neo5G_ConnectServer) error
}

func RegisterNeo5GServer(s *grpc.Server, srv Neo5GServer) {
	s.RegisterService(&_Neo5G_serviceDesc, srv)
}

func _Neo5G_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(Neo5GServer).Connect(&neo5GConnectServer{stream})
}

type Neo5G_ConnectServer interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type neo5GConnectServer struct {
	grpc.ServerStream
}

func (x *neo5GConnectServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func (x *neo5GConnectServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Neo5G_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.nqwire.neo5g",
	HandlerType: (*Neo5GServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Neo5G_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x31, 0x6d, 0xd3, 0x70, 0xa2, 0x12, 0xf2, 0x00, 0x56, 0x27, 0x94, 0xa9, 0x53, 0x54,
	0x81, 0xd8, 0x11, 0x4c, 0xac, 0x1e, 0xd9, 0xdc, 0xfa, 0x54, 0x18, 0xf0, 0xb9, 0x3e, 0x97, 0xfc,
	0x0c, 0xfe, 0x32, 0x39, 0x3b, 0x20, 0x21, 0xb6, 0xef, 0x9e, 0x9f, 0xfd, 0xde, 0x19, 0x2e, 0x19,
	0xd3, 0x27, 0xa6, 0x3e, 0x26, 0xca, 0xa4, 0x57, 0xd3, 0x14, 0x8e, 0xc3, 0x7b, 0xc2, 0xee, 0x4b,
	0xc1, 0xd2, 0xe2, 0xf1, 0x84, 0x9c, 0xf5, 0x15, 0xcc, 0x3c, 0x07, 0xa3, 0x6e, 0xd5, 0xe6, 0xc2,
	0x0a, 0x6a, 0x0d, 0xf3, 0x37, 0xe2, 0x6c, 0xce, 0x8b, 0x54, 0x58, 0xb4, 0x48, 0x29, 0x9b, 0xd9,
	0xa8, 0xad, 0x6c, 0x61, 0xbd, 0x86, 0xd6, 0xbb, 0xec, 0x76, 0x8e, 0xd1, 0xcc, 0x8b, 0xf7, 0x77,
	0x16, 0xff, 0x69, 0xcc, 0x34, 0x8b, 0xfa, 0x86, 0xb0, 0xf8, 0xa3, 0x63, 0x1e, 0x28, 0x79, 0xd3,
	0x54, 0xff, 0xcf, 0xdc, 0x6d, 0xa1, 0xb5, 0xc8, 0x91, 0x42, 0xbd, 0xbb, 0x27, 0x8f, 0xa5, 0xd2,
	0x98, 0x25, 0x2c, 0x2d, 0x3f, 0xf8, 0x30, 0x55, 0x12, 0xbc, 0x7b, 0x81, 0x45, 0x40, 0x7a, 0x38,
	0xe8, 0x47, 0x58, 0x3e, 0x53, 0x08, 0xb8, 0xcf, 0xfa, 0xba, 0xff, 0xb3, 0x67, 0x3f, 0xed, 0xb8,
	0xbe, 0xf9, 0xa7, 0xd7, 0xa8, 0xee, 0x6c, 0xa3, 0xb6, 0xea, 0xa9, 0x7d, 0x6d, 0xea, 0xc1, 0xae,
	0x29, 0xdf, 0x75, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x7d, 0x70, 0x30, 0xd3, 0x3e, 0x01, 0x00,
	0x00,
}
