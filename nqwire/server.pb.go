// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package nqwire is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	ConnectRequest
	ConnectResponse
	KWARGS
*/
package nqwire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ConnectRequest struct {
	Dsn      string `protobuf:"bytes,1,opt,name=dsn" json:"dsn,omitempty"`
	Host     string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Database string `protobuf:"bytes,4,opt,name=database" json:"database,omitempty"`
	User     string `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	Password string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
}

func (m *ConnectRequest) Reset()                    { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string            { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()               {}
func (*ConnectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ConnectResponse struct {
	Code uint32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *ConnectResponse) Reset()                    { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string            { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()               {}
func (*ConnectResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type KWARGS struct {
	Kwargs map[string]string `protobuf:"bytes,1,rep,name=kwargs" json:"kwargs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *KWARGS) Reset()                    { *m = KWARGS{} }
func (m *KWARGS) String() string            { return proto.CompactTextString(m) }
func (*KWARGS) ProtoMessage()               {}
func (*KWARGS) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KWARGS) GetKwargs() map[string]string {
	if m != nil {
		return m.Kwargs
	}
	return nil
}

func init() {
	proto.RegisterType((*ConnectRequest)(nil), "server.nqwire.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "server.nqwire.ConnectResponse")
	proto.RegisterType((*KWARGS)(nil), "server.nqwire.KWARGS")
}

var fileDescriptor0 = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x51, 0xbf, 0x4e, 0xf3, 0x30,
	0x1c, 0xfc, 0xdc, 0xb4, 0xf9, 0x8a, 0x4b, 0x01, 0x59, 0x0c, 0x56, 0x24, 0x10, 0x64, 0xca, 0x14,
	0xa1, 0x32, 0x40, 0xd9, 0x00, 0x21, 0x86, 0x4a, 0x0c, 0xe9, 0x80, 0xc4, 0x84, 0x9b, 0xfc, 0x54,
	0xaa, 0x82, 0x9d, 0xda, 0x4e, 0xa3, 0x2e, 0x3c, 0x06, 0xcf, 0x8b, 0xff, 0xa4, 0x11, 0x45, 0x62,
	0xbb, 0x3b, 0x9f, 0x7d, 0x97, 0x0b, 0xde, 0x57, 0x20, 0xd7, 0x20, 0xd3, 0x52, 0x0a, 0x2d, 0xc8,
	0xb0, 0x61, 0x7c, 0x55, 0x2f, 0x24, 0xc4, 0x5f, 0x08, 0x1f, 0xdc, 0x0b, 0xce, 0x21, 0xd7, 0x19,
	0xac, 0x2a, 0x50, 0x9a, 0x1c, 0xe1, 0xa0, 0x50, 0x9c, 0xa2, 0x33, 0x94, 0xec, 0x65, 0x16, 0x12,
	0x82, 0xbb, 0x6f, 0x42, 0x69, 0xda, 0x71, 0x92, 0xc3, 0x56, 0x2b, 0x85, 0xd4, 0x34, 0x30, 0xda,
	0x30, 0x73, 0x98, 0x44, 0xb8, 0x5f, 0x30, 0xcd, 0x66, 0x4c, 0x01, 0xed, 0x3a, 0x6f, 0xcb, 0xad,
	0xbf, 0x32, 0xd1, 0xb4, 0xe7, 0xdf, 0xb0, 0xd8, 0xfa, 0x4b, 0xa6, 0x54, 0x2d, 0x64, 0x41, 0x43,
	0xef, 0xdf, 0xf2, 0xf8, 0x0a, 0x1f, 0xb6, 0xbd, 0x54, 0x29, 0xb8, 0x7f, 0x22, 0x17, 0x05, 0xb8,
	0x66, 0x26, 0xd2, 0x62, 0x5b, 0xf6, 0x43, 0xcd, 0x9b, 0x66, 0x16, 0xc6, 0x9f, 0x38, 0x9c, 0x3c,
	0xdf, 0x66, 0x8f, 0x53, 0x32, 0xc6, 0xe1, 0xb2, 0x66, 0x72, 0xae, 0xcc, 0x8d, 0x20, 0x19, 0x8c,
	0xce, 0xd3, 0x9d, 0x6f, 0x4f, 0xbd, 0x2d, 0x9d, 0x38, 0xcf, 0x03, 0xd7, 0x72, 0x93, 0x35, 0x17,
	0xa2, 0x31, 0x1e, 0xfc, 0x90, 0x6d, 0xca, 0x12, 0x36, 0xdb, 0x49, 0x0c, 0x24, 0xc7, 0xb8, 0xb7,
	0x66, 0xef, 0x15, 0x34, 0xc9, 0x9e, 0xdc, 0x74, 0xae, 0xd1, 0xe8, 0xb5, 0x1d, 0x74, 0x6a, 0xd2,
	0x16, 0x39, 0x90, 0x27, 0xfc, 0xbf, 0x51, 0xc8, 0xc9, 0xaf, 0x0a, 0xbb, 0xd3, 0x47, 0xa7, 0x7f,
	0x1d, 0xfb, 0x05, 0xe2, 0x7f, 0x09, 0xba, 0x40, 0x77, 0xfd, 0x97, 0xd0, 0x9f, 0xcf, 0x42, 0xf7,
	0x4f, 0x2f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x02, 0x4b, 0xc6, 0x20, 0xe3, 0x01, 0x00, 0x00,
}
